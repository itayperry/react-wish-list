{"version":3,"sources":["components/AddVacation.js","components/Vacation.js","components/Vacations.js","components/VacationsFilter.js","components/VacationsFilters.js","components/WishListHeader.js","components/WishList.js","App.js","serviceWorker.js","index.js"],"names":["AddVacation","state","vacationDesc","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","addVacationFunc","react_default","a","createElement","onSubmit","this","placeholder","type","onChange","required","Component","Vacation","style","item","isActive","textDecoration","className","onClick","clickHandler","description","Vacations","currentFilter","logic","filterIndex","elements","vacationsList","map","index","chosenOption","optionsList","render","showItem","components_Vacation","toggleIsActiveHandler","key","VacationsFilter","text","VacationsFilters","buttons","components_VacationsFilter","logicIndex","changeFilter","WishListHeader","marginTop","color","WishList","vacations","listFilterIndex","filterLogic","addVacation","desc","tmpVacations","Object","toConsumableArray","push","isActiveHandler","changeFilterIndex","components_WishListHeader","components_AddVacation","components_Vacations","components_VacationsFilters","React","App","src_components_WishList","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6a577c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AddVacation extends Component {\r\n\tstate = {vacationDesc: ''}\r\n\r\n\thandleChange = event => {\r\n\t\tthis.setState({vacationDesc: event.target.value});\r\n\t} \r\n\r\n\thandleSubmit = event => {\r\n\t\tevent.preventDefault(event);\r\n\t\tthis.props.addVacationFunc(this.state.vacationDesc);\r\n\t\tthis.setState({vacationDesc: ''});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"add a destination..\"\r\n\t\t\t\t\t\tvalue={this.state.vacationDesc}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvalue=\"Add\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AddVacation;","import React from 'react';\r\n\r\nfunction Vacation(props) {\r\n\tconst style = props.item.isActive ? \r\n\t\t{textDecoration: 'none'} : \r\n\t\t{textDecoration: 'line-through'};\r\n\r\n    return <h3 className=\"vacation_item\" onClick={props.clickHandler} style={style}>{props.item.description}</h3>\r\n}\r\n\r\nexport default Vacation;","import React from 'react';\r\nimport Vacation from './Vacation'\r\n\r\nfunction Vacations(props) {\r\n\tconst showItem = (chosenOption,item,optionsList) =>{\r\n        let render;\r\n        switch(chosenOption) \r\n        {\r\n            case optionsList[0]: //All\r\n            render = true;\r\n            break;\r\n    \r\n            case optionsList[1]: //Active\r\n            render = item.isActive;\r\n            break;\r\n    \r\n            case optionsList[2]: //Completed\r\n            render = !item.isActive;\r\n            break;\r\n    \r\n            default:\r\n            render = false;\r\n        }\r\n\r\n        return render;\r\n    }\r\n\r\n    const currentFilter = props.logic[props.filterIndex];\r\n\r\n\tconst elements = props.vacationsList.map((item, index) => {\r\n\t\treturn showItem (currentFilter, item, props.logic) && <Vacation \r\n\t\t\t\tclickHandler={() => props.toggleIsActiveHandler(index)} \r\n\t\t\t\tkey={index} \r\n\t\t\t\titem={item} \r\n\t\t\t/>\r\n\t})\r\n\treturn <div>{elements}</div>\r\n}\r\n\r\nexport default Vacations;","import React from 'react'\r\n\r\nfunction VacationsFilter(props) {\r\n\treturn (<button onClick={props.clickHandler} >{props.text}</button>)\r\n}\r\n\r\nexport default VacationsFilter;","import React from 'react'\r\nimport VacationsFilter from './VacationsFilter.js'\r\n\r\nfunction VacationsFilters(props) {\r\n\tconst buttons = props.logic.map((item, index) => {\r\n\t\treturn <VacationsFilter \r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttext={item} \r\n\t\t\t\t\tlogicIndex={index} \r\n\t\t\t\t\tclickHandler={() => props.changeFilter(index)}\r\n\t\t\t\t/>\r\n\t});\r\n\treturn (<div className=\"btns_container\" >{buttons}</div>)\r\n}\r\n\r\nexport default VacationsFilters;","import React from 'react';\r\n\r\nfunction WishListHeader(props) {\r\n    return (\r\n    \t<div>\r\n    \t\t<h1 style={{marginTop: 0, color: 'white'}}>Vacations Wish List</h1>\r\n\t\t\t<p style={{color: 'wheat', marginTop: 0}}>Click the destination if you've traveled there</p>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default WishListHeader;","import React from 'react';\r\nimport AddVacation from './AddVacation'\r\nimport Vacations from './Vacations'\r\nimport VacationsFilters from './VacationsFilters'\r\nimport WishListHeader from './WishListHeader'\r\nimport './WishList.css'\r\n\r\nclass WishList extends React.Component {\r\n\tstate = {\r\n\t\tvacations: [\r\n\t\t\t{description: 'Rome', isActive: true},\r\n\t\t\t{description: 'London', isActive: false},\r\n\t\t\t{description: 'Vienna', isActive: true}\r\n\t\t], \r\n\t\tlistFilterIndex: 0\r\n\t};\r\n\r\n\tfilterLogic = ['All', 'Active', 'Completed'];\r\n\r\n\taddVacation = (desc) => {\r\n\t\tlet tmpVacations = [...this.state.vacations];\r\n\t\ttmpVacations.push({description: desc, isActive: true})\r\n\t\tthis.setState({vacations: tmpVacations, listFilterIndex: 0});\r\n\t}\r\n\r\n\tisActiveHandler = (index) => {\r\n\t\tlet tmpVacations = [...this.state.vacations];\r\n\t\ttmpVacations[index].isActive = !tmpVacations[index].isActive;\r\n\t\tthis.setState({vacations: tmpVacations});\r\n\t}\r\n\r\n\tchangeFilterIndex = (index) => this.setState({listFilterIndex: index});\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<WishListHeader/>\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<AddVacation \r\n\t\t\t\t\t\taddVacationFunc={this.addVacation} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Vacations \r\n\t\t\t\t\t\tvacationsList={this.state.vacations}\r\n\t\t\t\t\t\tlogic={this.filterLogic}\r\n\t\t\t\t\t\tfilterIndex={this.state.listFilterIndex}\r\n\t\t\t\t\t\ttoggleIsActiveHandler = {this.isActiveHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<VacationsFilters \r\n\t\t\t\t\t\tlogic={this.filterLogic} \r\n\t\t\t\t\t\tchangeFilter = {this.changeFilterIndex}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default WishList;","import React from 'react';\nimport './App.css';\nimport WishList from './components/WishList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WishList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}